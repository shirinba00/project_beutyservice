# Generated by Django 5.0.4 on 2024-04-23 15:48

import django.db.models.deletion
import taggit.managers
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=25, verbose_name='phone_number')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birth_date')),
                ('gender', models.BooleanField(blank=True, null=True)),
                ('information', models.TextField(verbose_name='information')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='customer_picture/', verbose_name='customer_picture')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.FloatField()),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='service.customer')),
                ('city', models.CharField(max_length=255)),
                ('province', models.CharField(max_length=255)),
                ('postalcode', models.CharField(max_length=255)),
                ('street', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_cat', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(verbose_name='description')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True, unique=True)),
                ('picture_category', models.ImageField(blank=True, null=True, upload_to='category_picture/')),
                ('sub_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub', to='service.category')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('p', 'Paid'), ('u', 'Unpaid'), ('c', 'Canceled')], default='u', max_length=1)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='service.customer')),
            ],
        ),
        migrations.CreateModel(
            name='SampleGalleryPersonService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=25, null=True, verbose_name='name_image')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='description_image')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='image')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TypeService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True, unique=True, verbose_name='slug_service')),
                ('info', models.TextField(verbose_name='description')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='price')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='datetime_created')),
                ('datetime_modified', models.DateTimeField(auto_now=True, verbose_name='datetime_modified')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='servicepicture/', verbose_name='servicepicture')),
                ('status', models.CharField(choices=[('pub', 'published'), ('drf', 'draft')], default='pub', max_length=3, verbose_name='status_service')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='category_service', to='service.category', verbose_name='category_service')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags_service')),
            ],
        ),
        migrations.CreateModel(
            name='PersonService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=25, verbose_name='phone_number')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birth_date')),
                ('gender', models.BooleanField(blank=True, null=True)),
                ('information', models.TextField(verbose_name='information')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='personservice_picture/', verbose_name='personservice_picture')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('typeservice', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='typeservice_personservice', to='service.typeservice', verbose_name='typeservice')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('w', 'Waiting'), ('a', 'Approved'), ('na', 'Not Approved')], default='w', max_length=2)),
                ('name', models.CharField(max_length=255)),
                ('text', models.TextField(verbose_name='Comment Text')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('typeservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='service.typeservice')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='service.order')),
                ('typeservice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='service.typeservice')),
            ],
            options={
                'unique_together': {('order', 'typeservice')},
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField()),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='service.cart')),
                ('typeservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='service.typeservice')),
            ],
            options={
                'unique_together': {('cart', 'typeservice')},
            },
        ),
    ]
